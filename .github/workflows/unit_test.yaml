name: Run all unit test

on:
  pull_request:
    branches:
      - main

jobs:
  run-unit-tests:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install python and pip
        run: sudo apt install -y python3 && sudo apt install -y python3-pip

      - name: setup env
        run: chmod +x ./scripts/setup_in_ubuntu.sh && ./scripts/setup_in_ubuntu.sh

      - name: add artifactory
        run: conan remote add artifactory https://conan.buzeta.net/artifactory/api/conan/conan-local

      - name: install dependencies conan
        run: chmod +x ./scripts/install_dependencies.sh && ./scripts/install_dependencies.sh

      - name: base build
        run: chmod +x ./scripts/build.sh && ./scripts/build.sh

      - name: build with grammar
        run: chmod +x ./scripts/build_grammar.sh && ./scripts/build_grammar.sh

      - name: run tests
        run: chmod +x ./scripts/compile_and_test.sh && ./scripts/compile_and_test.sh
  check-ceql-query-grammar-up-to-date:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install python and pip
        run: sudo apt install -y python3 && sudo apt install -y python3-pip

      - name: setup env
        run: chmod +x ./scripts/setup_in_ubuntu.sh && ./scripts/setup_in_ubuntu.sh

      - name: add artifactory
        run: conan remote add artifactory https://conan.buzeta.net/artifactory/api/conan/conan-local

      - name: install dependencies conan
        run: chmod +x ./scripts/install_dependencies.sh && ./scripts/install_dependencies.sh

      - name: base build
        run: chmod +x ./scripts/build.sh && ./scripts/build.sh

      - name: check if grammar autogenerated is up to date
        run: |
          FOLDER_TO_CHECK="./src/core_server/internal/parsing/ceql_query/autogenerated/"
          INITIAL_CHECKSUM=$(find "$FOLDER_TO_CHECK" -type f -exec md5sum {} \; | sort -k 2 | md5sum)

          # generate grammar
          chmod +x ./scripts/build_grammar.sh
          ./scripts/build_grammar.sh

          # Wait just in case
          sleep 2

          FINAL_CHECKSUM=$(find "$FOLDER_TO_CHECK" -type f -exec md5sum {} \; | sort -k 2 | md5sum)

          if [ "$INITIAL_CHECKSUM" != "$FINAL_CHECKSUM" ]; then
          echo "Error: $FOLDER_TO_CHECK changed after compiling."
          exit 1
          else
          echo "$FOLDER_TO_CHECK has not changed."
          fi
  check-code-format:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install latest clang-format
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y clang-format-15
          clang-format --version

      - name: Check code format
        run: |
          chmod +x ./scripts/clang_format_all_files.sh
          ./scripts/clang_format_all_files.sh
