#include <catch2/catch_test_macros.hpp>
#include <catch2/matchers/catch_matchers_vector.hpp>

// #include "core_server/internal/parsing/stream_declaration/stream.hpp"
#include "core_server/internal/parsing/stream_declaration/autogenerated/StreamDeclarationLexer.h"
#include "core_server/internal/parsing/stream_declaration/autogenerated/StreamDeclarationParser.h"
#include "core_server/internal/parsing/stream_declaration/autogenerated/StreamDeclarationParserBaseVisitor.h"

// #include "core_server/internal/parsing/stream_declaration/visitors/stream_visitor.hpp"

namespace CORE::Internal::CEQL::UnitTests {

// std::string create_stream(){
//     return "DECLARE STREAM MySensor {\n"
//            "EVENT Temp { ID:int, Value1:string, Value2:boolean }\n"
//            "EVENT Hum { ID:int, Value3:double }\n"
//            "EVENT Hum2 { ID:int }\n"
//            "}";
// }

TEST_CASE("Correct stream declaration parsing") {
  // Parsing::Declaration::Parser parser;
  // Parsing::Declaration::Stream stream = parser.parse_stream(create_stream());
  // REQUIRE(stream.name == "MySensor");
}
}  // namespace CORE::Internal::CEQL::UnitTests