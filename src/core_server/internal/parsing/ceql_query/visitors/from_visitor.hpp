#include "core_server/internal/ceql/query/from.hpp"
#include "core_server/internal/parsing/ceql_query/autogenerated/CEQLQueryParserBaseVisitor.h"

namespace CORE {
namespace Internal {
namespace Parsing {
class FromVisitor : public CEQLQueryParserBaseVisitor {
 private:
  std::set<std::string> streams;

 public:
  CEQL::From get_parsed_from() { return CEQL::From(std::move(streams)); }

  virtual std::any
  visitCore_query(CEQLQueryParser::Core_queryContext* ctx) override {
    // Visiting From clause will identify all streams.
    auto from_ctx = ctx->from_clause();
    if (from_ctx) {
      visit(from_ctx);
    }
    return {};  // Only interested in stream names
  }

  virtual std::any
  visitStream_name(CEQLQueryParser::Stream_nameContext* ctx) override {
    streams.insert(ctx->getText());
    return {};
  }
};
}  // namespace Parsing
}  // namespace Internal
}  // namespace CORE
